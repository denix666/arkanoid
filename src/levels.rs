use macroquad::prelude::*;

pub const LVL_1:[[&str; 13]; 19] = [
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" ","c","c","c","c","c"," ","c","c","c","c","c"," "],
    [" ","f","f","f","f","f"," ","f","f","f","f","f"," "],
    [" ","m","m","m","m","m"," ","m","m","m","m","m"," "],
    [" ","b","b","b","b","b"," ","b","b","b","b","b"," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
];

pub const LVL_2:[[&str; 13]; 19] = [
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" ","c","c","c","c","c"," ","c","c","c","c","c"," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    ["m","m","m","m","m","m","m","m","m","m","m","m","m"],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" ","c","c","c","c","c"," ","c","c","c","c","c"," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    ["r","r","r","r","r","r","r","r","r","r","r","r","r"],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
];

pub const LVL_3:[[&str; 13]; 19] = [
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
    [" "," "," "," "," "," "," "," "," "," "," "," "," "],
];

pub struct Level {
    texture: Texture2D,
    pub lvl_num: i32,
}

impl Level {
    pub async fn new() -> Self {
        Self {
            texture: load_texture("assets/backgrounds/bg_1.png").await.unwrap(),
            lvl_num: 1,
        }
    }

    pub async fn increase_level(&mut self) {
        if self.lvl_num < 6 {
            self.lvl_num += 1;
        }

        let path = format!("assets/backgrounds/bg_{}.png",self.lvl_num);
        self.texture = load_texture(&path).await.unwrap();
    }

    pub fn number(&mut self) -> i32 {
        return self.lvl_num
    }

    pub fn draw(&self) {
        draw_texture(self.texture, 1.0, 1.0, WHITE);
    }
}
